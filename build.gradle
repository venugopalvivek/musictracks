group 'com.swiggy.vivek'
version '1.0-SNAPSHOT'

description = """8tracks simplified API only"""

repositories {
    jcenter()
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'

apply from: 'https://raw.github.com/gretty-gradle-plugin/gretty/master/pluginScripts/gretty.plugin'

war {
    baseName = 'musictracks'
}

sourceCompatibility = 1.8

ext {
    jerseyVersion = '2.22.2'
    jacksonVersion = '2.9.1'
    springVersion = '5.0.0.RELEASE'
    slf4jVersion = '1.7.13' // this version cannot be changed as it will bring in log4j-over-slf4j dependency
}

dependencies {
    // spring dependency
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-aop:$springVersion"
    compile "org.springframework:spring-web:$springVersion"
    compile "org.springframework:spring-beans:$springVersion"

    // jackson - required for converting pojo to json
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
    compile "org.glassfish.jersey.media:jersey-media-multipart:$jerseyVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile 'net.minidev:json-smart:2.2'

    // jersey spring (to support spring dependency injection)
    compile("org.glassfish.jersey.ext:jersey-spring3:$jerseyVersion") {
        exclude(module: 'spring-core')
        exclude(module: 'spring-web')
        exclude(module: 'spring-beans')
    }

    // apache commons (StringUtils etc)
    compile 'org.apache.commons:commons-lang3:3.4'

    // javax servlet api
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

    testCompile 'junit:junit:4.12'
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile 'org.mockito:mockito-all:1.9.5-rc1'
    testCompile 'org.mockito:mockito-core:1.9.5-rc1'
}

// Create the task that runs the integration tests found from the
// configured source directory and uses the correct classpath.
gretty {
    httpPort = 8080
    contextPath = "musictracks"
}
